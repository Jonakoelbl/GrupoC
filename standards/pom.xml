<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ar.edu.unq.tpi.desapp</groupId>
	<artifactId>GrupoC-parent</artifactId>
	<inceptionYear>2014</inceptionYear>
	<packaging>pom</packaging>

	<name>GrupoC-parent</name>
	<url>http://maven.apache.org</url>

	<modules>
		<module>GrupoC-Presentation</module>
		<module>GrupoC-Model</module>
		<module>GrupoC-Service</module>
		<module>GrupoC-Persistence</module>
	</modules>

	<scm>
		<connection>scm:git:http://github.com/GrupoHunter/</connection>
		<url>http://github.com/GrupoHunter/</url>
	</scm>

	<parent>
		<groupId>ar.edu.unq</groupId>
		<artifactId>aunq-parent</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jetty.version>6.1.16</jetty.version>
		<wicket.version>6.15.0</wicket.version>
		<spring.version>3.0.5.RELEASE</spring.version>
		<cglib.version>2.1_3</cglib.version>
		<scala.version>2.10.3</scala.version>
	</properties>

	<dependencies>
		<!-- SCALA -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<dependency>
			<groupId>org.scalaj</groupId>
			<artifactId>scalaj-collection_2.10</artifactId>
			<version>1.5</version>
		</dependency>
		
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.10</artifactId>
			<version>2.1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scalastyle</groupId>
			<artifactId>scalastyle_2.10</artifactId>
			<version>0.4.0</version>
		</dependency>

		<dependency>
			<groupId>org.scalastyle</groupId>
			<artifactId>scalastyle-maven-plugin</artifactId>
			<version>0.4.0</version>
		</dependency>

		<!-- <dependency> <groupId>org.scalamock</groupId> <artifactId>scalamock-specs2-support_2.10</artifactId> 
			<version>3.0.1</version> <scope>test</scope> </dependency> -->

		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2_2.10</artifactId>
			<version>2.3.10</version>
			<scope>test</scope>
		</dependency>
		<!-- /SCALA -->

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.3</version>
		</dependency>

		<!-- Added for scala/eclipse understanding of JodaTime constructors -->
		<dependency>
			<groupId>org.joda</groupId>
			<artifactId>joda-convert</artifactId>
			<version>1.6</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.11</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.2</version>
		</dependency>

		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r09</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.collections</groupId>
			<artifactId>collections-generic</artifactId>
			<version>4.01</version>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- <groupId>org.scala-tools</groupId> <artifactId>maven-scala-plugin</artifactId> -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.1.5</version>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<!-- This is not a process resources goal, but a compile goal. Putting 
							this goal in this phase ensures that the Scala compiler executes before Java 
							compiler. The Scala compiler compiles both Java and Scala classes. Therefore, 
							the Java compiler is not really needed. -->
						<phase>process-resources</phase>
						<configuration>
							<scalaVersion>${scala.version}</scalaVersion>
						</configuration>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile-first</id>
						<phase>process-test-resources</phase>
						<configuration>
							<scalaVersion>${scala.version}</scalaVersion>
						</configuration>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
	        <plugin>
	            <groupId>org.scalastyle</groupId>
	            <artifactId>scalastyle-maven-plugin</artifactId>
	            <version>0.4.0</version>
	            <configuration>
	              <verbose>false</verbose>
	              <failOnViolation>true</failOnViolation>
	              <includeTestSourceDirectory>true</includeTestSourceDirectory>
	              <failOnWarning>false</failOnWarning>
	              <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
	              <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
	              <configLocation>${basedir}/lib/scalastyle_config.xml</configLocation>
	              <outputFile>${project.basedir}/scalastyle-output.xml</outputFile>
	              <outputEncoding>UTF-8</outputEncoding>
	            </configuration>
	            <executions>
	              <execution>
	                <goals>
	                  <goal>check</goal>
	                </goals>
	              </execution>
	            </executions>
        	</plugin>
		</plugins>
	</build>
</project>